version: '3.8'

services:
  # Main API service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://root:ABC%40123@db:5432/code_review_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DEFAULT_LLM_PROVIDER=local
      - LOCAL_LLM_BASE_URL=http://host.docker.internal:4000
      - LOCAL_LLM_MODEL=lily-cybersecurity-7b-v0.2
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker
  celery-worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://root:ABC%40123@db:5432/code_review_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DEFAULT_LLM_PROVIDER=local
      - LOCAL_LLM_BASE_URL=http://host.docker.internal:4000
      - LOCAL_LLM_MODEL=lily-cybersecurity-7b-v0.2
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    command: celery -A app.tasks.celery_tasks worker --loglevel=info --concurrency=2
    healthcheck:
      test: ["CMD", "celery", "-A", "app.tasks.celery_tasks", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery beat (for scheduled tasks)
  celery-beat:
    build: .
    environment:
      - DATABASE_URL=postgresql://root:ABC%40123@db:5432/code_review_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DEFAULT_LLM_PROVIDER=local
      - LOCAL_LLM_BASE_URL=http://host.docker.internal:4000
      - LOCAL_LLM_MODEL=lily-cybersecurity-7b-v0.2
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    command: celery -A app.tasks.celery_tasks beat --loglevel=info

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=code_review_db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=ABC@123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flower (Celery monitoring)
  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - redis
    restart: unless-stopped
    command: celery -A app.tasks.celery_tasks flower --port=5555

  # Nginx (optional, for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: ai-code-review-network
